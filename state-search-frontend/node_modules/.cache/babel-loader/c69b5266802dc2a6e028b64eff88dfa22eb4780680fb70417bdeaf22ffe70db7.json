{"ast":null,"code":"// Import the Loader from '@googlemaps/js-api-loader'\nimport { Loader } from '@googlemaps/js-api-loader';\nexport default {\n  props: {\n    selectedState: {\n      type: String,\n      required: false\n    }\n  },\n  data() {\n    return {\n      map: null,\n      stateLayer: null // To store the state boundaries\n    };\n  },\n  watch: {\n    selectedState(newVal) {\n      if (newVal) {\n        this.highlightState(newVal); // Highlight the new state whenever it changes\n      }\n    }\n  },\n  mounted() {\n    const loader = new Loader({\n      apiKey: 'AIzaSyB1-psa7VQjYCGqGVYsLJVrOfdnYOYQuFs',\n      version: 'weekly'\n    });\n    loader.load().then(() => {\n      // eslint-disable-next-line no-undef\n      const mapOptions = {\n        center: {\n          lat: 37.1,\n          lng: -95.7\n        },\n        // Centered in the US\n        zoom: 4\n      };\n\n      // eslint-disable-next-line no-undef\n      this.map = new google.maps.Map(document.getElementById('map'), mapOptions);\n\n      // Initialize the data layer\n      // eslint-disable-next-line no-undef\n      this.stateLayer = new google.maps.Data({\n        map: this.map\n      });\n    });\n  },\n  methods: {\n    // Highlight the selected state by loading GeoJSON and clearing old data\n    highlightState(stateName) {\n      if (!this.map || !this.stateLayer) return;\n\n      // Remove all existing highlights\n      this.stateLayer.forEach(feature => {\n        this.stateLayer.remove(feature);\n      });\n\n      // Load state boundary GeoJSON\n      const geoJsonUrl = `https://raw.githubusercontent.com/PublicaMundi/MappingAPI/master/data/geojson/us-states.json`; // Example GeoJSON source\n\n      // Load GeoJSON data for the new state\n      this.stateLayer.loadGeoJson(geoJsonUrl, null, () => {\n        // Filter and remove all non-matching features\n        this.stateLayer.forEach(feature => {\n          if (feature.getProperty('name') !== stateName) {\n            this.stateLayer.remove(feature); // Remove non-matching states\n          }\n        });\n        this.stateLayer.setStyle({\n          fillColor: 'yellow',\n          strokeWeight: 2\n        });\n\n        // Zoom in on the selected state\n        this.map.fitBounds(this.getFeatureBounds(this.stateLayer));\n      });\n    }\n  }\n};","map":{"version":3,"names":["Loader","props","selectedState","type","String","required","data","map","stateLayer","watch","newVal","highlightState","mounted","loader","apiKey","version","load","then","mapOptions","center","lat","lng","zoom","google","maps","Map","document","getElementById","Data","methods","stateName","forEach","feature","remove","geoJsonUrl","loadGeoJson","getProperty","setStyle","fillColor","strokeWeight","fitBounds","getFeatureBounds"],"sources":["D:\\vibrant_project\\state-search-frontend\\src\\components\\MapView.vue"],"sourcesContent":["<template>\r\n  <div id=\"map\" class=\"map-container\"></div>\r\n</template>\r\n\r\n<script>\r\n// Import the Loader from '@googlemaps/js-api-loader'\r\nimport { Loader } from '@googlemaps/js-api-loader';\r\n\r\nexport default {\r\n  props: {\r\n    selectedState: {\r\n      type: String,\r\n      required: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      map: null,\r\n      stateLayer: null, // To store the state boundaries\r\n    };\r\n  },\r\n  watch: {\r\n    selectedState(newVal) {\r\n      if (newVal) {\r\n        this.highlightState(newVal); // Highlight the new state whenever it changes\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    const loader = new Loader({\r\n      apiKey: 'AIzaSyB1-psa7VQjYCGqGVYsLJVrOfdnYOYQuFs',\r\n      version: 'weekly',\r\n    });\r\n\r\n    loader.load().then(() => {\r\n      // eslint-disable-next-line no-undef\r\n      const mapOptions = {\r\n        center: { lat: 37.1, lng: -95.7 }, // Centered in the US\r\n        zoom: 4,\r\n      };\r\n\r\n      // eslint-disable-next-line no-undef\r\n      this.map = new google.maps.Map(document.getElementById('map'), mapOptions);\r\n\r\n      // Initialize the data layer\r\n      // eslint-disable-next-line no-undef\r\n      this.stateLayer = new google.maps.Data({ map: this.map });\r\n    });\r\n  },\r\n  methods: {\r\n    // Highlight the selected state by loading GeoJSON and clearing old data\r\n    highlightState(stateName) {\r\n      if (!this.map || !this.stateLayer) return;\r\n\r\n      // Remove all existing highlights\r\n      this.stateLayer.forEach((feature) => {\r\n        this.stateLayer.remove(feature); \r\n      });\r\n\r\n      // Load state boundary GeoJSON\r\n      const geoJsonUrl = `https://raw.githubusercontent.com/PublicaMundi/MappingAPI/master/data/geojson/us-states.json`; // Example GeoJSON source\r\n\r\n      // Load GeoJSON data for the new state\r\n      this.stateLayer.loadGeoJson(geoJsonUrl, null, () => {\r\n        // Filter and remove all non-matching features\r\n        this.stateLayer.forEach((feature) => {\r\n          if (feature.getProperty('name') !== stateName) {\r\n            this.stateLayer.remove(feature); // Remove non-matching states\r\n          }\r\n        });\r\n\r\n        this.stateLayer.setStyle({\r\n          fillColor: 'yellow',\r\n          strokeWeight: 2,\r\n        });\r\n\r\n        // Zoom in on the selected state\r\n        this.map.fitBounds(this.getFeatureBounds(this.stateLayer));\r\n      });\r\n    },\r\n\r\n\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#map {\r\n  width: 100%;\r\n  height: 500px;\r\n  margin-top: 50px;\r\n}\r\n</style>\r\n"],"mappings":"AAKA;AACA,SAASA,MAAK,QAAS,2BAA2B;AAElD,eAAe;EACbC,KAAK,EAAE;IACLC,aAAa,EAAE;MACbC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,IAAI;MACTC,UAAU,EAAE,IAAI,CAAE;IACpB,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLP,aAAaA,CAACQ,MAAM,EAAE;MACpB,IAAIA,MAAM,EAAE;QACV,IAAI,CAACC,cAAc,CAACD,MAAM,CAAC,EAAE;MAC/B;IACF;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,MAAMC,MAAK,GAAI,IAAIb,MAAM,CAAC;MACxBc,MAAM,EAAE,yCAAyC;MACjDC,OAAO,EAAE;IACX,CAAC,CAAC;IAEFF,MAAM,CAACG,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;MACvB;MACA,MAAMC,UAAS,GAAI;QACjBC,MAAM,EAAE;UAAEC,GAAG,EAAE,IAAI;UAAEC,GAAG,EAAE,CAAC;QAAK,CAAC;QAAE;QACnCC,IAAI,EAAE;MACR,CAAC;;MAED;MACA,IAAI,CAACf,GAAE,GAAI,IAAIgB,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,EAAET,UAAU,CAAC;;MAE1E;MACA;MACA,IAAI,CAACV,UAAS,GAAI,IAAIe,MAAM,CAACC,IAAI,CAACI,IAAI,CAAC;QAAErB,GAAG,EAAE,IAAI,CAACA;MAAI,CAAC,CAAC;IAC3D,CAAC,CAAC;EACJ,CAAC;EACDsB,OAAO,EAAE;IACP;IACAlB,cAAcA,CAACmB,SAAS,EAAE;MACxB,IAAI,CAAC,IAAI,CAACvB,GAAE,IAAK,CAAC,IAAI,CAACC,UAAU,EAAE;;MAEnC;MACA,IAAI,CAACA,UAAU,CAACuB,OAAO,CAAEC,OAAO,IAAK;QACnC,IAAI,CAACxB,UAAU,CAACyB,MAAM,CAACD,OAAO,CAAC;MACjC,CAAC,CAAC;;MAEF;MACA,MAAME,UAAS,GAAI,8FAA8F,EAAE;;MAEnH;MACA,IAAI,CAAC1B,UAAU,CAAC2B,WAAW,CAACD,UAAU,EAAE,IAAI,EAAE,MAAM;QAClD;QACA,IAAI,CAAC1B,UAAU,CAACuB,OAAO,CAAEC,OAAO,IAAK;UACnC,IAAIA,OAAO,CAACI,WAAW,CAAC,MAAM,MAAMN,SAAS,EAAE;YAC7C,IAAI,CAACtB,UAAU,CAACyB,MAAM,CAACD,OAAO,CAAC,EAAE;UACnC;QACF,CAAC,CAAC;QAEF,IAAI,CAACxB,UAAU,CAAC6B,QAAQ,CAAC;UACvBC,SAAS,EAAE,QAAQ;UACnBC,YAAY,EAAE;QAChB,CAAC,CAAC;;QAEF;QACA,IAAI,CAAChC,GAAG,CAACiC,SAAS,CAAC,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACjC,UAAU,CAAC,CAAC;MAC5D,CAAC,CAAC;IACJ;EAGF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}