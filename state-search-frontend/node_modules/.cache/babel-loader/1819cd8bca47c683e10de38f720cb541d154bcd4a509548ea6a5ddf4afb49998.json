{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"map\",\n  class: \"map-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1"],"sources":["D:\\state_search_demo\\state-search-app\\src\\components\\MapView.vue"],"sourcesContent":["<template>\r\n    <div id=\"map\" class=\"map-container\"></div>\r\n  </template>\r\n  \r\n  <script>\r\n  // Import the Loader from '@googlemaps/js-api-loader'\r\n  import { Loader } from '@googlemaps/js-api-loader';\r\n  \r\n  export default {\r\n    props: {\r\n      selectedState: {\r\n        type: String,\r\n        required: false,\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        map: null,\r\n      };\r\n    },\r\n    watch: {\r\n      selectedState(newVal) {\r\n        if (newVal) {\r\n          this.highlightState(newVal); // Highlight state whenever it changes\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      const loader = new Loader({\r\n        apiKey: 'AIzaSyB1-psa7VQjYCGqGVYsLJVrOfdnYOYQuFs', \r\n        version: 'weekly',\r\n      });\r\n  \r\n      loader.load().then(() => {\r\n        const mapOptions = {\r\n          center: { lat: 37.1, lng: -95.7 }, // Centered in the US\r\n          zoom: 4,\r\n        };\r\n  \r\n        this.map = new google.maps.Map(document.getElementById('map'), mapOptions);\r\n      });\r\n    },\r\n    methods: {\r\n      highlightState(stateName) {\r\n        if (!this.map) return;\r\n  \r\n        const stateCoordinates = {\r\n          'Alabama': { paths: [/* Alabama coordinates */], options: { fillColor: 'yellow' } },\r\n          'California': { paths: [/* California coordinates */], options: { fillColor: 'blue' } },\r\n        };\r\n  \r\n        if (stateCoordinates[stateName]) {\r\n          new google.maps.Polygon({\r\n            ...stateCoordinates[stateName].options,\r\n            paths: stateCoordinates[stateName].paths,\r\n            map: this.map,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";;EACSA,EAAE,EAAC,KAAK;EAACC,KAAK,EAAC;;;uBAApBC,mBAAA,CAA0C,OAA1CC,UAA0C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}