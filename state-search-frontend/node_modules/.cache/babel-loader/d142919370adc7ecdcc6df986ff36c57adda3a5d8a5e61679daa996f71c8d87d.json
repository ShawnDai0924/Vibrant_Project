{"ast":null,"code":"// Import the Loader from '@googlemaps/js-api-loader'\nimport { Loader } from '@googlemaps/js-api-loader';\nexport default {\n  props: {\n    selectedState: {\n      type: String,\n      required: false\n    }\n  },\n  data() {\n    return {\n      map: null\n    };\n  },\n  watch: {\n    selectedState(newVal) {\n      if (newVal) {\n        this.highlightState(newVal); // Highlight state whenever it changes\n      }\n    }\n  },\n  mounted() {\n    const loader = new Loader({\n      apiKey: 'AIzaSyB1-psa7VQjYCGqGVYsLJVrOfdnYOYQuFs',\n      version: 'weekly'\n    });\n    loader.load().then(() => {\n      const mapOptions = {\n        center: {\n          lat: 37.1,\n          lng: -95.7\n        },\n        // Centered in the US\n        zoom: 4\n      };\n      this.map = new google.maps.Map(document.getElementById('map'), mapOptions);\n    });\n  },\n  methods: {\n    highlightState(stateName) {\n      if (!this.map) return;\n      const stateCoordinates = {\n        'Alabama': {\n          paths: [/* Alabama coordinates */],\n          options: {\n            fillColor: 'yellow'\n          }\n        },\n        'California': {\n          paths: [/* California coordinates */],\n          options: {\n            fillColor: 'blue'\n          }\n        }\n      };\n      if (stateCoordinates[stateName]) {\n        new google.maps.Polygon({\n          ...stateCoordinates[stateName].options,\n          paths: stateCoordinates[stateName].paths,\n          map: this.map\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["Loader","props","selectedState","type","String","required","data","map","watch","newVal","highlightState","mounted","loader","apiKey","version","load","then","mapOptions","center","lat","lng","zoom","google","maps","Map","document","getElementById","methods","stateName","stateCoordinates","paths","options","fillColor","Polygon"],"sources":["D:\\state_search_demo\\state-search-app\\src\\components\\MapView.vue"],"sourcesContent":["<template>\r\n    <div id=\"map\" class=\"map-container\"></div>\r\n  </template>\r\n  \r\n  <script>\r\n  // Import the Loader from '@googlemaps/js-api-loader'\r\n  import { Loader } from '@googlemaps/js-api-loader';\r\n  \r\n  export default {\r\n    props: {\r\n      selectedState: {\r\n        type: String,\r\n        required: false,\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        map: null,\r\n      };\r\n    },\r\n    watch: {\r\n      selectedState(newVal) {\r\n        if (newVal) {\r\n          this.highlightState(newVal); // Highlight state whenever it changes\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      const loader = new Loader({\r\n        apiKey: 'AIzaSyB1-psa7VQjYCGqGVYsLJVrOfdnYOYQuFs', \r\n        version: 'weekly',\r\n      });\r\n  \r\n      loader.load().then(() => {\r\n        const mapOptions = {\r\n          center: { lat: 37.1, lng: -95.7 }, // Centered in the US\r\n          zoom: 4,\r\n        };\r\n  \r\n        this.map = new google.maps.Map(document.getElementById('map'), mapOptions);\r\n      });\r\n    },\r\n    methods: {\r\n      highlightState(stateName) {\r\n        if (!this.map) return;\r\n  \r\n        const stateCoordinates = {\r\n          'Alabama': { paths: [/* Alabama coordinates */], options: { fillColor: 'yellow' } },\r\n          'California': { paths: [/* California coordinates */], options: { fillColor: 'blue' } },\r\n        };\r\n  \r\n        if (stateCoordinates[stateName]) {\r\n          new google.maps.Polygon({\r\n            ...stateCoordinates[stateName].options,\r\n            paths: stateCoordinates[stateName].paths,\r\n            map: this.map,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":"AAKE;AACA,SAASA,MAAK,QAAS,2BAA2B;AAElD,eAAe;EACbC,KAAK,EAAE;IACLC,aAAa,EAAE;MACbC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE;IACP,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLN,aAAaA,CAACO,MAAM,EAAE;MACpB,IAAIA,MAAM,EAAE;QACV,IAAI,CAACC,cAAc,CAACD,MAAM,CAAC,EAAE;MAC/B;IACF;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,MAAMC,MAAK,GAAI,IAAIZ,MAAM,CAAC;MACxBa,MAAM,EAAE,yCAAyC;MACjDC,OAAO,EAAE;IACX,CAAC,CAAC;IAEFF,MAAM,CAACG,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;MACvB,MAAMC,UAAS,GAAI;QACjBC,MAAM,EAAE;UAAEC,GAAG,EAAE,IAAI;UAAEC,GAAG,EAAE,CAAC;QAAK,CAAC;QAAE;QACnCC,IAAI,EAAE;MACR,CAAC;MAED,IAAI,CAACd,GAAE,GAAI,IAAIe,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,EAAET,UAAU,CAAC;IAC5E,CAAC,CAAC;EACJ,CAAC;EACDU,OAAO,EAAE;IACPjB,cAAcA,CAACkB,SAAS,EAAE;MACxB,IAAI,CAAC,IAAI,CAACrB,GAAG,EAAE;MAEf,MAAMsB,gBAAe,GAAI;QACvB,SAAS,EAAE;UAAEC,KAAK,EAAE,CAAC,0BAA0B;UAAEC,OAAO,EAAE;YAAEC,SAAS,EAAE;UAAS;QAAE,CAAC;QACnF,YAAY,EAAE;UAAEF,KAAK,EAAE,CAAC,6BAA6B;UAAEC,OAAO,EAAE;YAAEC,SAAS,EAAE;UAAO;QAAE;MACxF,CAAC;MAED,IAAIH,gBAAgB,CAACD,SAAS,CAAC,EAAE;QAC/B,IAAIN,MAAM,CAACC,IAAI,CAACU,OAAO,CAAC;UACtB,GAAGJ,gBAAgB,CAACD,SAAS,CAAC,CAACG,OAAO;UACtCD,KAAK,EAAED,gBAAgB,CAACD,SAAS,CAAC,CAACE,KAAK;UACxCvB,GAAG,EAAE,IAAI,CAACA;QACZ,CAAC,CAAC;MACJ;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}