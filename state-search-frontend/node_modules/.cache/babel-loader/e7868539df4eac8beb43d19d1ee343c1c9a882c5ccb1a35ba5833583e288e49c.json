{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"search-container\"\n};\nconst _hoisted_2 = {\n  class: \"search-box\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"dropdown\"\n};\nconst _hoisted_4 = [\"innerHTML\", \"onClick\"];\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Search Box \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchTerm = $event),\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.onSearch && $options.onSearch(...args)),\n    placeholder: \"Type a state name\",\n    autocomplete: \"off\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.searchTerm]]), $data.filteredStates.length ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredStates, state => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: state.id,\n      innerHTML: $options.highlightMatch(state.name),\n      onClick: $event => $options.selectState(state.name)\n    }, null, 8 /* PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"Loading...\")) : _createCommentVNode(\"v-if\", true), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Google Map Container \"), _cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    id: \"map\",\n    class: \"map-container\"\n  }, null, -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_cache","$event","$data","searchTerm","onInput","args","$options","onSearch","placeholder","autocomplete","filteredStates","length","_hoisted_3","_Fragment","_renderList","state","id","innerHTML","highlightMatch","name","onClick","selectState","_hoisted_4","loading","_hoisted_5","error","_hoisted_6","_toDisplayString"],"sources":["D:\\state_search_demo\\state-search-app\\src\\components\\StateSearch.vue"],"sourcesContent":["<template>\n  <div class=\"search-container\">\n    <!-- Search Box -->\n    <div class=\"search-box\">\n      <input\n        v-model=\"searchTerm\"\n        @input=\"onSearch\"\n        placeholder=\"Type a state name\"\n        autocomplete=\"off\"\n      />\n      <ul v-if=\"filteredStates.length\" class=\"dropdown\">\n        <li\n          v-for=\"state in filteredStates\"\n          :key=\"state.id\"\n          v-html=\"highlightMatch(state.name)\"\n          @click=\"selectState(state.name)\"\n        >\n        </li>\n      </ul>\n    </div>\n\n    <div v-if=\"loading\">Loading...</div>\n    <div v-if=\"error\">{{ error }}</div>\n\n    <!-- Google Map Container -->\n    <div id=\"map\" class=\"map-container\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      searchTerm: '',\n      states: [],\n      filteredStates: [],\n      selectedState: '', // Stores the selected state\n      loading: false,\n      error: null,\n      map: null,\n    };\n  },\n  methods: {\n    async onSearch() {\n      if (this.searchTerm.length < 1) {\n        this.filteredStates = [];\n        return;\n      }\n\n      this.loading = true;\n      this.error = null;\n\n      const query = `\n        query {\n          states {\n            id\n            name\n          }\n        }\n      `;\n\n      try {\n        const response = await fetch('http://localhost:8080/graphql', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ query }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n\n        const { data } = await response.json();\n        this.states = data.states;\n        this.filteredStates = this.filterStates();\n      } catch (err) {\n        this.error = 'Failed to fetch states: ' + err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    filterStates() {\n      const searchTermLower = this.searchTerm.toLowerCase();\n      return this.states.filter(state =>\n        state.name.toLowerCase().startsWith(searchTermLower)\n      );\n    },\n\n    highlightMatch(stateName) {\n      const searchTerm = this.searchTerm;\n      if (!searchTerm) return stateName;\n\n      const regex = new RegExp(`(${searchTerm})`, 'gi');\n      return stateName.replace(regex, '<strong>$1</strong>');\n    },\n\n    selectState(stateName) {\n      this.searchTerm = stateName; // Autofill the search input with the clicked state name\n      this.filteredStates = [];    // Clear the dropdown after selection\n      this.selectedState = stateName; // Update selectedState to highlight on the map\n    },\n\n    // Highlight the selected state on the map\n    highlightState(stateName) {\n      if (!stateName || !this.map) return;\n\n      const stateCoordinates = {\n        'Alabama': { paths: [/* Alabama coordinates */], options: { fillColor: 'yellow' } },\n        'California': { paths: [/* California coordinates */], options: { fillColor: 'blue' } },\n      };\n\n      if (stateCoordinates[stateName]) {\n        // eslint-disable-next-line no-undef\n        new google.maps.Polygon({\n          ...stateCoordinates[stateName].options,\n          paths: stateCoordinates[stateName].paths,\n          // eslint-disable-next-line no-undef\n          map: this.map,\n        });\n      }\n    },\n  },\n  mounted() {\n    const loader = new Loader({\n      apiKey: 'AIzaSyB1-psa7VQjYCGqGVYsLJVrOfdnYOYQuFs', \n      version: 'weekly',\n    });\n\n    loader.load().then(() => {\n      // eslint-disable-next-line no-undef\n      const mapOptions = {\n        center: { lat: 37.1, lng: -95.7 }, // Centered in the US\n        zoom: 4,\n      };\n\n      // eslint-disable-next-line no-undef\n      this.map = new google.maps.Map(document.getElementById('map'), mapOptions);\n    });\n\n    // Watch for changes to the selectedState and highlight it on the map\n    this.$watch('selectedState', (newVal) => {\n      this.highlightState(newVal);\n    });\n  },\n};\n</script>\n\n<style scoped>\n/* Styles for the search and dropdown */\n.search-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n.search-box {\n  position: relative;\n  width: 300px;\n}\n\ninput {\n  padding: 10px;\n  width: 100%;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.dropdown {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  background-color: white;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  max-height: 200px;\n  overflow-y: auto;\n  z-index: 1000;\n  margin-top: 5px;\n  padding: 0;\n  list-style: none;\n}\n\n.dropdown li {\n  padding: 8px;\n  cursor: pointer;\n}\n\n.dropdown li:hover {\n  background-color: #f0f0f0;\n}\n\n#map {\n  width: 100%;\n  height: 500px;\n  margin-top: 50px; /* Adjust this value to move the map lower */\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAkB;;EAEtBA,KAAK,EAAC;AAAY;;EAH3BC,GAAA;EAUuCD,KAAK,EAAC;;mBAV7C;;EAAAC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJC,mBAAA,gBAAmB,EACnBC,mBAAA,CAgBM,OAhBNC,UAgBM,G,gBAfJD,mBAAA,CAKE;IATR,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKiBC,KAAA,CAAAC,UAAU,GAAAF,MAAA;IAClBG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;IAChBG,WAAW,EAAC,mBAAmB;IAC/BC,YAAY,EAAC;iEAHJP,KAAA,CAAAC,UAAU,E,GAKXD,KAAA,CAAAQ,cAAc,CAACC,MAAM,I,cAA/BhB,mBAAA,CAQK,MARLiB,UAQK,I,kBAPHjB,mBAAA,CAMKkB,SAAA,QAjBbC,WAAA,CAY0BZ,KAAA,CAAAQ,cAAc,EAAvBK,KAAK;yBADdpB,mBAAA,CAMK;MAJFD,GAAG,EAAEqB,KAAK,CAACC,EAAE;MACdC,SAAmC,EAA3BX,QAAA,CAAAY,cAAc,CAACH,KAAK,CAACI,IAAI;MAChCC,OAAK,EAAAnB,MAAA,IAAEK,QAAA,CAAAe,WAAW,CAACN,KAAK,CAACI,IAAI;4BAfxCG,UAAA;sCAAAzB,mBAAA,e,GAqBeK,KAAA,CAAAqB,OAAO,I,cAAlB5B,mBAAA,CAAoC,OArBxC6B,UAAA,EAqBwB,YAAU,KArBlC3B,mBAAA,gBAsBeK,KAAA,CAAAuB,KAAK,I,cAAhB9B,mBAAA,CAAmC,OAtBvC+B,UAAA,EAAAC,gBAAA,CAsByBzB,KAAA,CAAAuB,KAAK,oBAtB9B5B,mBAAA,gBAwBIA,mBAAA,0BAA6B,E,0BAC7BC,mBAAA,CAA0C;IAArCkB,EAAE,EAAC,KAAK;IAACvB,KAAK,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}