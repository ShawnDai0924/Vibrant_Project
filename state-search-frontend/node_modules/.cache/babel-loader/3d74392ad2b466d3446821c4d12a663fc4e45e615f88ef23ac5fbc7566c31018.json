{"ast":null,"code":"// Import the components\nimport StateSearch from './components/StateSearch.vue';\nimport MapView from './components/MapView.vue';\nexport default {\n  components: {\n    StateSearch,\n    MapView\n  },\n  data() {\n    return {\n      selectedState: '' // Holds the selected state from StateSearch.vue\n    };\n  },\n  methods: {\n    // Handle the event emitted from StateSearch.vue\n    handleStateSelected(stateName) {\n      this.selectedState = stateName; // Update the selected state\n    }\n  }\n};","map":{"version":3,"names":["StateSearch","MapView","components","data","selectedState","methods","handleStateSelected","stateName"],"sources":["D:\\state_search_demo\\state-search-app\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>State Search</h1>\n    <!-- StateSearch component to search and select a state -->\n    <StateSearch @state-selected=\"handleStateSelected\" />\n\n    <!-- MapView component to display the Google Map and highlight the selected state -->\n    <MapView :selectedState=\"selectedState\" />\n  </div>\n</template>\n\n<script>\n// Import the components\nimport StateSearch from './components/StateSearch.vue';\nimport MapView from './components/MapView.vue';\n\nexport default {\n  components: {\n    StateSearch,\n    MapView,\n  },\n  data() {\n    return {\n      selectedState: '', // Holds the selected state from StateSearch.vue\n    };\n  },\n  methods: {\n    // Handle the event emitted from StateSearch.vue\n    handleStateSelected(stateName) {\n      this.selectedState = stateName; // Update the selected state\n    },\n  },\n};\n</script>\n\n<style>\n/* Add your global styles here */\n#app {\n  text-align: center;\n}\n</style>\n"],"mappings":"AAYA;AACA,OAAOA,WAAU,MAAO,8BAA8B;AACtD,OAAOC,OAAM,MAAO,0BAA0B;AAE9C,eAAe;EACbC,UAAU,EAAE;IACVF,WAAW;IACXC;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,EAAE,CAAE;IACrB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,mBAAmBA,CAACC,SAAS,EAAE;MAC7B,IAAI,CAACH,aAAY,GAAIG,SAAS,EAAE;IAClC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}