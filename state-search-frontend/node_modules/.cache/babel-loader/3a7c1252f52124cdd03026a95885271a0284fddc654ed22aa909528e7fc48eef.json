{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_StateSearch = _resolveComponent(\"StateSearch\");\n  const _component_MapView = _resolveComponent(\"MapView\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"American States and Territories\", -1 /* HOISTED */)), _createCommentVNode(\" StateSearch component to search and select a state \"), _createVNode(_component_StateSearch, {\n    onStateSelected: $options.handleStateSelected\n  }, null, 8 /* PROPS */, [\"onStateSelected\"]), _createCommentVNode(\" Display Google Map and highlight the selected state \"), _createVNode(_component_MapView, {\n    selectedState: $data.selectedState\n  }, null, 8 /* PROPS */, [\"selectedState\"])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_createVNode","_component_StateSearch","onStateSelected","$options","handleStateSelected","_component_MapView","selectedState","$data"],"sources":["D:\\vibrant_project\\state-search-frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>American States and Territories</h1>\n    <!-- StateSearch component to search and select a state -->\n    <StateSearch v-on:state-selected=\"handleStateSelected\" />\n\n    <!-- Display Google Map and highlight the selected state -->\n    <MapView v-bind:selectedState=\"selectedState\" />\n  </div>\n</template>\n\n\n<script>\n// Import the components\nimport StateSearch from './components/StateSearch.vue';\nimport MapView from './components/MapView.vue';\n\nexport default {\n  components: {\n    StateSearch,\n    MapView,\n  },\n  data() {\n    return {\n      selectedState: '', // Holds the selected state from StateSearch.vue\n    };\n  },\n  methods: {\n    // Handle the event emitted from StateSearch.vue\n    handleStateSelected(stateName) {\n      this.selectedState = stateName; // Update the selected state\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  text-align: center;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;;;uBAAbC,mBAAA,CAOM,OAPNC,UAOM,G,0BANJC,mBAAA,CAAwC,YAApC,iCAA+B,sBACnCC,mBAAA,wDAA2D,EAC3DC,YAAA,CAAyDC,sBAAA;IAAvCC,eAAc,EAAEC,QAAA,CAAAC;EAAmB,8CAErDL,mBAAA,yDAA4D,EAC5DC,YAAA,CAAgDK,kBAAA;IAAhCC,aAAa,EAAEC,KAAA,CAAAD;EAAa,2C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}